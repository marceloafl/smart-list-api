{
  "openapi": "3.0.0",
  "info": {
    "title": "User Registration API",
    "version": "1.0.0",
    "description": "A simple API for registering and logging in users."
  },
  "servers": [
    {
      "url": "http://localhost:8080/v1",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address of the user",
            "example": "user@example.com"
          },
          "passwordHash": {
            "type": "string",
            "description": "Hashed password of the user",
            "example": "$2b$10$EIXZtE5xjI0k7.4Q7NHeqO0VzD7m1J1tIAv5VcQYBeK4K.yRExdKi"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was created",
            "example": "2024-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was last updated",
            "example": "2024-01-01T00:00:00Z"
          }
        },
        "required": ["email", "passwordHash", "createdAt", "updatedAt"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token for authenticated user",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email address of the user",
                "example": "user@example.com"
              }
            }
          }
        },
        "required": ["token", "user"]
      }
    }
  },
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user in the application.",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of the user",
                    "example": "SecurePassword123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Error registering user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Error registering user"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login a user",
        "description": "Logs in a user and returns a JWT token.",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of the user",
                    "example": "SecurePassword123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid email or password",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Invalid email or password"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
